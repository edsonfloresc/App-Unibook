//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebCategoryService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CategoryDto", Namespace="http://tempuri.org/")]
    public partial class CategoryDto : object
    {
        
        private short CategoryIdField;
        
        private string NameField;
        
        private string PurposeField;
        
        private WebCategoryService.QuestionsDto QuestionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public short CategoryId
        {
            get
            {
                return this.CategoryIdField;
            }
            set
            {
                this.CategoryIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string Purpose
        {
            get
            {
                return this.PurposeField;
            }
            set
            {
                this.PurposeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public WebCategoryService.QuestionsDto Questions
        {
            get
            {
                return this.QuestionsField;
            }
            set
            {
                this.QuestionsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuestionsDto", Namespace="http://tempuri.org/")]
    public partial class QuestionsDto : object
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WebCategoryService.WebCategoryServiceSoap")]
    public interface WebCategoryServiceSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Get", ReplyAction="*")]
        System.Threading.Tasks.Task<WebCategoryService.GetResponse> GetAsync(WebCategoryService.GetRequest request);

        // CODEGEN: Generating message contract since element name GetResult from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/Get", ReplyAction = "*")]
        WebCategoryService.GetResponse Get(WebCategoryService.GetRequest request);

        // CODEGEN: Generating message contract since element name roleDto from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/Insert", ReplyAction = "*")]
        WebCategoryService.InsertResponse Insert(WebCategoryService.InsertRequest request);

        // CODEGEN: Generating message contract since element name roleDto from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/Update", ReplyAction = "*")]
        WebCategoryService.UpdateResponse Update(WebCategoryService.UpdateRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="Get", Namespace="http://tempuri.org/", Order=0)]
        public WebCategoryService.GetRequestBody Body;
        
        public GetRequest()
        {
        }
        
        public GetRequest(WebCategoryService.GetRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public short id;
        
        public GetRequestBody()
        {
        }
        
        public GetRequestBody(short id)
        {
            this.id = id;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetResponse", Namespace="http://tempuri.org/", Order=0)]
        public WebCategoryService.GetResponseBody Body;
        
        public GetResponse()
        {
        }
        
        public GetResponse(WebCategoryService.GetResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GetResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WebCategoryService.CategoryDto GetResult;
        
        public GetResponseBody()
        {
        }
        
        public GetResponseBody(WebCategoryService.CategoryDto GetResult)
        {
            this.GetResult = GetResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class InsertRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "Insert", Namespace = "http://tempuri.org/", Order = 0)]
        public WebCategoryService.InsertRequestBody Body;

        public InsertRequest()
        {
        }

        public InsertRequest(WebCategoryService.InsertRequestBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
    public partial class InsertRequestBody
    {

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
        public WebCategoryService.CategoryDto categoryDto;

        public InsertRequestBody()
        {
        }

        public InsertRequestBody(WebCategoryService.CategoryDto categoryDto)
        {
            this.categoryDto = categoryDto;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class InsertResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "InsertResponse", Namespace = "http://tempuri.org/", Order = 0)]
        public WebCategoryService.InsertResponseBody Body;

        public InsertResponse()
        {
        }

        public InsertResponse(WebCategoryService.InsertResponseBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class InsertResponseBody
    {

        public InsertResponseBody()
        {
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class UpdateRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "Update", Namespace = "http://tempuri.org/", Order = 0)]
        public WebCategoryService.UpdateRequestBody Body;

        public UpdateRequest()
        {
        }

        public UpdateRequest(WebCategoryService.UpdateRequestBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://tempuri.org/")]
    public partial class UpdateRequestBody
    {

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
        public WebCategoryService.CategoryDto categoryDto;

        public UpdateRequestBody()
        {
        }

        public UpdateRequestBody(WebCategoryService.CategoryDto roleDto)
        {
            this.categoryDto = roleDto;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class UpdateResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "UpdateResponse", Namespace = "http://tempuri.org/", Order = 0)]
        public WebCategoryService.UpdateResponseBody Body;

        public UpdateResponse()
        {
        }

        public UpdateResponse(WebCategoryService.UpdateResponseBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class UpdateResponseBody
    {

        public UpdateResponseBody()
        {
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface WebCategoryServiceSoapChannel : WebCategoryService.WebCategoryServiceSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class WebCategoryServiceSoapClient : System.ServiceModel.ClientBase<WebCategoryService.WebCategoryServiceSoap>, WebCategoryService.WebCategoryServiceSoap
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WebCategoryServiceSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(WebCategoryServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), WebCategoryServiceSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WebCategoryServiceSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WebCategoryServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WebCategoryServiceSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WebCategoryServiceSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WebCategoryServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WebCategoryService.GetResponse> WebCategoryService.WebCategoryServiceSoap.GetAsync(WebCategoryService.GetRequest request)
        {
            return base.Channel.GetAsync(request);
        }
        
        public System.Threading.Tasks.Task<WebCategoryService.GetResponse> GetAsync(short id)
        {
            WebCategoryService.GetRequest inValue = new WebCategoryService.GetRequest();
            inValue.Body = new WebCategoryService.GetRequestBody();
            inValue.Body.id = id;
            return ((WebCategoryService.WebCategoryServiceSoap)(this)).GetAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebCategoryService.GetResponse WebCategoryService.WebCategoryServiceSoap.Get(WebCategoryService.GetRequest request)
        {
            return base.Channel.Get(request);
        }

        public WebCategoryService.CategoryDto Get(short id)
        {
            WebCategoryService.GetRequest inValue = new WebCategoryService.GetRequest();
            inValue.Body = new WebCategoryService.GetRequestBody();
            inValue.Body.id = id;
            WebCategoryService.GetResponse retVal = ((WebCategoryService.WebCategoryServiceSoap)(this)).Get(inValue);
            return retVal.Body.GetResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebCategoryService.UpdateResponse WebCategoryService.WebCategoryServiceSoap.Update(WebCategoryService.UpdateRequest request)
        {
            return base.Channel.Update(request);
        }

        public void Update(WebCategoryService.CategoryDto categoryDto)
        {
            WebCategoryService.UpdateRequest inValue = new WebCategoryService.UpdateRequest();
            inValue.Body = new WebCategoryService.UpdateRequestBody();
            inValue.Body.categoryDto = categoryDto;
            WebCategoryService.UpdateResponse retVal = ((WebCategoryService.WebCategoryServiceSoap)(this)).Update(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebCategoryService.InsertResponse WebCategoryServiceSoap.Insert(WebCategoryService.InsertRequest request)
        {
            return base.Channel.Insert(request);
        }

        public void Insert(WebCategoryService.CategoryDto categoryDto)
        {
            WebCategoryService.InsertRequest inValue = new WebCategoryService.InsertRequest();
            inValue.Body = new WebCategoryService.InsertRequestBody();
            inValue.Body.categoryDto = categoryDto;
            WebCategoryService.InsertResponse retVal = ((WebCategoryService.WebCategoryServiceSoap)(this)).Insert(inValue);
        }

        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WebCategoryServiceSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.WebCategoryServiceSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WebCategoryServiceSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:29357/WebCategoryService.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.WebCategoryServiceSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:29357/WebCategoryService.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            WebCategoryServiceSoap,
            
            WebCategoryServiceSoap12,
        }
    }
}
